import random
import time

import requests
import json
class HttpRequest:
    def __init__(self,url,param):
        self.url=url
        self.param=param


    def http_request(self,method,headers=None):
        if method.upper()=="GET":
            res=requests.get(self.url,self.param,headers=headers)

        elif method.upper()=="POST":
            res=requests.post(self.url,self.param,headers=headers)

        else:
            print("请求的方式不存在")

        return res




if __name__ == '__main__':
    score = random.randint(1,100)
    login_header ={"Content-Type": "application/json"}
    login_url ='http://yuntiyu-test.dream-sports.cn/tice/user/login'
    login_parm ={
                "username": "yunnan1",
              "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb",
              "password": "dabai521"
            }
    login_reg = HttpRequest(login_url, param=json.dumps(login_parm)).http_request('post', headers=login_header)
    logindict =dict(login_reg.json())
    #print(logindict)
    #print(logindict["data"]["authorization"])
    startDate =time.strftime("%Y-%m-%d %H:%M:%S",time.localtime())
    header = {"Authorization": logindict["data"]["authorization"],"Content-Type": "application/json"}
    insert_url = 'http://yuntiyu-test.dream-sports.cn/tice/result/insert'
    print(score)
    uuid1 = time.time()
    #体测
    # insert_parm = {
    #     "uuid" : uuid1,
    #     "testUnicode": "122122221",
    #     "testerId": "73492",#"73221",
    #     "itemId": 17,  #22身高,85体重
    #     "score": "200",
    #     "startDate": "2022-10-13 11:36:08",
    #     "endDate": "2022-10-13 11:37:08"}
    # res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm)).http_request('post', headers=header)
    # print(res_reg.json())
    # yunnan1/dabai521 高一 1班
    testers_id_10 = [
        "73493",
        "73494",
        "73495",
        "73496",
        "73497",
        "73498",
        "73499",
        "73500",
        "73501",
        "73502",
        "73503",
        "73504",
        "73505",
        "73506",
        "73507",
        "73508",
        "73509",
        "73510",
        "73511",
        "73512",
        "73513",
        "73514",
        "73515",
        "73516",
        "73517",
        "73518",
        "73519",
        "73520",
        "73521",
        "73522",
        "73523"
    ]
    """"# 9年级2班
    testers_id_F = ["73424","73425",
                  "73426",
                  "73427",
                  "73428",
                  "73429",
                  "73430",
                  "73431",
                  "73432",
                  "73433",
                  "73434",
                  "73435",
                  "73436",
                  "73437",
                  "73438",
                  "73439",
                  "73440",
                  "73441",
                  "73442",
                  "73443",
                  "73444",
                  "73445",
                  "73446",
                  "73447",
                  "73448",
                  "73449",
                  "73450",
                  "73451",
                  "73452",
                  "73453",
                  "73454",
                  "73455",
                  "73456",
                  "73457",
                  "73458",
                  "73459",
                  "73460"
                  ]
    testers_id_M = ["74745",
                "74746",
                "74747",
                "74748",
                "74749",
                "74750",
                "74751",
                "74752",
                "74753",
                "74754",
                "74755",
                "74756",
                "74757",
                "74758",
                "74759",
                "74760",
                "74761",
                "74762",
                "74763",
                "74764",
                "74765",
                "74766",
                "74767",
                "74768",
                "74769",
                "74770",
                "74771",
                "74772",
                "74773",
                "74774",
                "74775",
                "74776",
                "74777",
                "74778",
                "74779",
                "74780",
                "74781",
                "74782",
                "74783",
                "74784",
                "74785",
                "74786",
                "74787",
                "74788",
                "74789",
                "74790",
                "74791",
                "74792",
                "74793",
                "74794",
                "74795",
                "74796",
                "74797",
                "74798",
                "74799",
                "74800",
                "74801",
                "74802",
                "74803",
                "74804",
                "74805",
                "74806",
                "74807",
                "74808",
                "74809",
                "74810",
                "74811",
                "74812",
                "74813",
                "74814",
                "74815",
                "74816",
                "74817",
                "74818",
                "74819",
                "74820",
                "74821",
                "74822",
                "74823",
                "74824",
                "74825",
                "74826",
                "74827",
                "74828",
                "74829",
                "74830",
                "74831",
                "74832",
                "74833",
                "74834",
                "74835",
                "74836",
                "74837",
                "74838",
                "74839",
                "74840",
                "74841",
                "74842",
                "74843",
                "74844",
                "74845",
                "74846",
                "74847",
                "74848",
                "74849",
                "74850",
                "74851",
                "74852",
                "74853",
                "74854",
                "74855",
                "74856",
                "74857",
                "74858",
                "74859",
                "74860",
                "74861",
                "74862",
                "74863",
                "74864",
                "74865",
                "74866",
                "74867",
                "74868",
                "74869",
                "74870",
                "74871",
                "74872",
                "74873",
                "74874",
                "74875",
                "74876",
                "74877",
                "74878",
                "74879",
                "74880",
                "74881",
                "74882",
                "74883",
                "74884",
                "74885",
                "74886",
                "74887",
                "74888",
                "74889",
                "74890",
                "74891",
                "74892",
                "74893",
                "74894",
                "74895",
                "74896",
                "74897",
                "74898",
                "74899",
                "74900",
                "74901",
                "74902",
                "74903",
                "74904",
                "74905",
                "74906",
                "74907",
                "74908",
                "74909",
                "74910",
                "74911",
                "74912",
                "74913",
                "74914",
                "74915",
                "74916",
                "74917",
                "74918",
                "74919",
                "74920",
                "74921",
                "74922",
                "74923",
                "74924",
                "74925",
                "74926",
                "74927",
                "74928",
                "74929",
                "74930",
                "74931",
                "74932",
                "74933",
                "74934",
                "74935",
                "74936",
                "74937",
                "74938",
                "74939",
                "74940",
                "74941",
                "74942",
                "74943",
                "74944"
                  ]
    """
    # 9年级4班
    """testers_id_M = ["74945",
                    "74946",
                    "74947",
                    "74948",
                    "74949",
                    "74950",
                    "74951",
                    "74952",
                    "74953",
                    "74954",
                    "74955",
                    "74956",
                    "74957",
                    "74958",
                    "74959",
                    "74960",
                    "74961",
                    "74962",
                    "74963",
                    "74964",
                    "74965",
                    "74966",
                    "74967",
                    "74968",
                    "74969",
                    "74970",
                    "74971",
                    "74972",
                    "74973",
                    "74974",
                    "74975",
                    "74976",
                    "74977",
                    "74978",
                    "74979",
                    "74980",
                    "74981",
                    "74982",
                    "74983",
                    "74984",
                    "74985",
                    "74986",
                    "74987",
                    "74988",
                    "74989",
                    "74990",
                    "74991",
                    "74992",
                    "74993",
                    "74994",
                    "74995",
                    "74996",
                    "74997",
                    "74998",
                    "74999",
                    "75000",
                    "75001",
                    "75002",
                    "75003",
                    "75004",
                    "75005",
                    "75006",
                    "75007",
                    "75008",
                    "75009",
                    "75010",
                    "75011",
                    "75012",
                    "75013",
                    "75014",
                    "75015",
                    "75016",
                    "75017",
                    "75018",
                    "75019",
                    "75020",
                    "75021",
                    "75022",
                    "75023",
                    "75024",
                    "75025",
                    "75026",
                    "75027",
                    "75028",
                    "75029",
                    "75030",
                    "75031",
                    "75032",
                    "75033",
                    "75034",
                    "75035",
                    "75036",
                    "75037",
                    "75038",
                    "75039",
                    "75040",
                    "75041",
                    "75042",
                    "75043",
                    "75044",
                    "75045",
                    "75046",
                    "75047",
                    "75048",
                    "75049",
                    "75050",
                    "75051",
                    "75052",
                    "75053",
                    "75054",
                    "75055",
                    "75056",
                    "75057",
                    "75058",
                    "75059",
                    "75060",
                    "75061",
                    "75062",
                    "75063",
                    "75064",
                    "75065",
                    "75066",
                    "75067",
                    "75068",
                    "75069",
                    "75070",
                    "75071",
                    "75072",
                    "75073",
                    "75074",
                    "75075",
                    "75076",
                    "75077",
                    "75078",
                    "75079",
                    "75080",
                    "75081",
                    "75082",
                    "75083",
                    "75084",
                    "75085",
                    "75086",
                    "75087",
                    "75088",
                    "75089",
                    "75090",
                    "75091",
                    "75092",
                    "75093",
                    "75094",
                    "75095",
                    "75096",
                    "75097",
                    "75098",
                    "75099",
                    "75100",
                    "75101",
                    "75102",
                    "75103",
                    "75104",
                    "75105",
                    "75106",
                    "75107",
                    "75108",
                    "75109",
                    "75110",
                    "75111",
                    "75112",
                    "75113",
                    "75114",
                    "75115",
                    "75116",
                    "75117",
                    "75118",
                    "75119",
                    "75120",
                    "75121",
                    "75122",
                    "75123",
                    "75124",
                    "75125",
                    "75126",
                    "75127",
                    "75128",
                    "75129",
                    "75130",
                    "75131",
                    "75132",
                    "75133",
                    "75134",
                    "75135",
                    "75136",
                    "75137",
                    "75138",
                    "75139",
                    "75140",
                    "75141",
                    "75142",
                    "75143",
                    "75144",
                    "75145",
                    "75146",
                    "75147",
                    "75148",
                    "75149",
                    "75150",
                    "75151",
                    "75152",
                    "75153",
                    "75154",
                    "75155",
                    "75156",
                    "75157",
                    "75158",
                    "75159",
                    "75160",
                    "75161",
                    "75162",
                    "75163",
                    "75164",
                    "75165",
                    "75166",
                    "75167",
                    "75168",
                    "75169",
                    "75170",
                    "75171",
                    "75172",
                    "75173",
                    "75174",
                    "75175",
                    "75176",
                    "75177",
                    "75178",
                    "75179",
                    "75180",
                    "75181",
                    "75182",
                    "75183",
                    "75184",
                    "75185",
                    "75186",
                    "75187",
                    "75188",
                    "75189",
                    "75190",
                    "75191",
                    "75192",
                    "75193",
                    "75194",
                    "75195",
                    "75196",
                    "75197",
                    "75198",
                    "75199",
                    "75200",
                    "75201",
                    "75202",
                    "75203",
                    "75204",
                    "75205",
                    "75206",
                    "75207",
                    "75208",
                    "75209",
                    "75210",
                    "75211",
                    "75212",
                    "75213",
                    "75214",
                    "75215",
                    "75216",
                    "75217",
                    "75218",
                    "75219",
                    "75220",
                    "75221",
                    "75222",
                    "75223",
                    "75224",
                    "75225",
                    "75226",
                    "75227",
                    "75228",
                    "75229",
                    "75230",
                    "75231",
                    "75232",
                    "75233",
                    "75234",
                    "75235",
                    "75236",
                    "75237",
                    "75238",
                    "75239",
                    "75240",
                    "75241",
                    "75242",
                    "75243",
                    "75244",
                    "75245",
                    "75246",
                    "75247",
                    "75248",
                    "75249",
                    "75250",
                    "75251",
                    "75252",
                    "75253",
                    "75254",
                    "75255",
                    "75256",
                    "75257",
                    "75258",
                    "75259",
                    "75260",
                    "75261",
                    "75262",
                    "75263",
                    "75264",
                    "75265",
                    "75266",
                    "75267",
                    "75268",
                    "75269",
                    "75270",
                    "75271",
                    "75272",
                    "75273",
                    "75274",
                    "75275",
                    "75276",
                    "75277",
                    "75278",
                    "75279",
                    "75280",
                    "75281",
                    "75282",
                    "75283",
                    "75284",
                    "75285",
                    "75286",
                    "75287",
                    "75288",
                    "75289",
                    "75290",
                    "75291",
                    "75292",
                    "75293",
                    "75294",
                    "75295",
                    "75296",
                    "75297",
                    "75298",
                    "75299",
                    "75300",
                    "75301",
                    "75302",
                    "75303",
                    "75304",
                    "75305",
                    "75306",
                    "75307",
                    "75308",
                    "75309",
                    "75310",
                    "75311",
                    "75312",
                    "75313",
                    "75314",
                    "75315",
                    "75316",
                    "75317",
                    "75318",
                    "75319",
                    "75320",
                    "75321",
                    "75322",
                    "75323",
                    "75324",
                    "75325",
                    "75326",
                    "75327",
                    "75328",
                    "75329",
                    "75330",
                    "75331",
                    "75332",
                    "75333",
                    "75334",
                    "75335",
                    "75336",
                    "75337",
                    "75338",
                    "75339",
                    "75340",
                    "75341",
                    "75342",
                    "75343",
                    "75344"]
    testers_id_F = ["73482",
                           "73483",
                           "73484",
                           "73485",
                           "73486",
                           "73487",
                           "73488",
                           "73489",
                           "73490",
                           "73491",
                           "75345",
                           "75346",
                           "75347",
                           "75348",
                           "75349",
                           "75350",
                           "75351",
                           "75352",
                           "75353",
                           "75354",
                           "75355",
                           "75356",
                           "75357",
                           "75358",
                           "75359",
                           "75360",
                           "75361",
                           "75362",
                           "75363",
                           "75364",
                           "75365",
                           "75366",
                           "75367",
                           "75368",
                           "75369",
                           "75370",
                           "75371",
                           "75372",
                           "75373",
                           "75374",
                           "75375",
                           "75376",
                           "75377",
                           "75378",
                           "75379",
                           "75380",
                           "75381",
                           "75382",
                           "75383",
                           "75384",
                           "75385",
                           "75386",
                           "75387",
                           "75388",
                           "75389",
                           "75390",
                           "75391",
                           "75392",
                           "75393",
                           "75394",
                           "75395",
                           "75396",
                           "75397",
                           "75398",
                           "75399",
                           "75400",
                           "75401",
                           "75402",
                           "75403",
                           "75404",
                           "75405",
                           "75406",
                           "75407",
                           "75408",
                           "75409",
                           "75410",
                           "75411",
                           "75412",
                           "75413",
                           "75414",
                           "75415",
                           "75416",
                           "75417",
                           "75418",
                           "75419",
                           "75420",
                           "75421",
                           "75422",
                           "75423",
                           "75424",
                           "75425",
                           "75426",
                           "75427",
                           "75428",
                           "75429",
                           "75430",
                           "75431",
                           "75432",
                           "75433",
                           "75434"]
                           """
    testers_id_F = ["73391"]
    # items_id=[
    #     "226",
    #     "225",
    #     "224",
    #     "223",
    #     "222",
    #     "221",
    #     "220",
    #     "219",
    #     "218",
    #     "217",
    #     "216",
    #     "213",
    #     "212",
    #     "211",
    #     "210",
    #     "209",
    #     "208",
    #     "207",
    #     "206",
    #     "205",
    #     "204",
    #     "203",
    #     "202",
    #     "201",
    #     "200",
    #     "199",
    #     "198",
    #     "197",
    #     "196",
    #     "195",
    #     "194",
    #     "193",
    #     "192",
    #     "191",
    #     "190",
    #     "189",
    #     "188",
    #     "187",
    #     "186",
    #     "185",
    #     "184",
    #     "183",
    #     "182",
    #     "181",
    #     "180",
    #     "179",
    #     "178",
    #     "177",
    #     "176",
    #     "175",
    #     "174",
    #     "173",
    #     "172",
    #     "171",
    #     "170",
    #     "169",
    #     "168",
    #     "167"
    # ]
    #items_id=["3","5","9","11","14","15","16","17","92","108"]
    #items_id=["5","9","11","16","17","92","108"]
    #女
    # items_id = ["3","5", "9", "12", "15", "16", "17", "92", "108"]
    #男
    #items_id = ["3","5", "9", "11","14", "16", "17", "92", "108"]
    #items_id = ["11"]
    items_id = ["22","85"]
    scores_3 = "8.8";       # 50米
    scores_5 = "-1.4";       # 坐位体前屈
    scores_9 = "200";       # 立定跳远
    scores_12 = "60";       # 仰卧起坐
    scores_11 = "3";      # 引体向上
    scores_14 = "315";      # 1000米
    scores_15 = "300";      # 800米
    scores_16 = "9.1";      # 实心球
    scores_17 = "143";      # 双脚跳绳
    scores_92 = "16.8";      # 100米跑
    scores_108 = "302";     # 200米自由泳
    scores_22 = "170";     # 200米自由泳
    scores_85 = "40";     # 200米自由泳
    for tester_id in testers_id_F:
        print(tester_id)
        for item_id in items_id:
            uuid = time.time()
            # 50米
            if(item_id=="3"):
                insert_parm1 ={
                    "testType":"1",
                    "score": scores_3,
                    "itemId": item_id,
                    "testUnicode": "",
                    "testerId": tester_id,
                    "keyNum": "1",
                    "evaType": 7,
                    "uuid": uuid,
                    "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                    "startDate": "2022-10-14 13:25:30",
                    "endDate": "2022-10-14 13:26:30",
                    "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())

            #1000米
            if(item_id=="14"):
                insert_parm1 = {
                    "testType": "1",
                    "score": scores_14,
                    "itemId": item_id,
                    "testUnicode": "",
                    "testerId": tester_id,
                    "keyNum": "1",
                    "evaType": 7,
                    "uuid": uuid,
                    "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                    "startDate": "2022-10-14 13:25:30",
                    "endDate": "2022-10-14 13:26:30",
                    "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())
            #800米
            if(item_id=="15"):
                insert_parm1 = {
                    "testType": "1",
                    "score": scores_15,
                    "itemId": item_id,
                    "testUnicode": "",
                    "testerId": tester_id,
                    "keyNum": "1",
                    "evaType": 7,
                    "uuid": uuid,
                    "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                    "startDate": "2022-10-14 13:25:30",
                    "endDate": "2022-10-14 13:26:30",
                    "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())
            # 坐位体前屈
            if (item_id == "5"):
                insert_parm1 = {
                    "testType": "1",
                    "score": scores_5,
                    "itemId": item_id,
                    "testUnicode": "",
                    "testerId": tester_id,
                    "keyNum": "1",
                    "evaType": 7,
                    "uuid": uuid,
                    "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                    "startDate": "2022-10-14 13:25:30",
                    "endDate": "2022-10-14 13:26:30",
                    "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())
            #立定跳远
            if(item_id == "85"):
                insert_parm1 = {
                    "testType": "1",
                    "score": scores_85,
                    "itemId": item_id,
                    "testUnicode": "",
                    "testerId": tester_id,
                    "keyNum": "1",
                    "evaType": 1,
                    "uuid": uuid,
                    "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                    "startDate": "2022-10-14 13:25:30",
                    "endDate": "2022-10-14 13:26:30",
                    "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())
            # 引体向上
            if (item_id == "22"):
                    insert_parm1 = {
                        "testType": "1",
                        "score": scores_22,
                        "itemId": item_id,
                        "testUnicode": "",
                        "testerId": tester_id,
                        "keyNum": "1",
                        "evaType": 1,
                        "uuid": uuid,
                        "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                        "startDate": "2022-10-14 13:25:30",
                        "endDate": "2022-10-14 13:26:30",
                        "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                    }
                    res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post',headers=header)
                    print(res_reg.json())
            # 仰卧起坐
            if (item_id == "12"):
                insert_parm1 = {
                            "testType": "0",
                            "score": scores_12,
                            "itemId": item_id,
                            "testUnicode": "",
                            "testerId": tester_id,
                            "keyNum": "1",
                            "evaType": 1,
                            "uuid": uuid,
                            "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                            "startDate": "2022-10-14 13:25:30",
                            "endDate": "2022-10-14 13:26:30",
                            "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                        }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post',headers=header)
                print(res_reg.json())
            # 实心球
            if (item_id == "16"):
                insert_parm1 = {
                        "testType": "1",
                        "score": scores_16,
                        "itemId": item_id,
                        "testUnicode": "",
                        "testerId": tester_id,
                        "keyNum": "1",
                        "evaType": 7,
                        "uuid": uuid,
                        "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                        "startDate": "2022-10-14 13:25:30",
                        "endDate": "2022-10-14 13:26:30",
                        "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                    }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())
            # 双脚跳绳
            if (item_id == "17"):
                insert_parm1 = {
                        "testType": "1",
                        "score": scores_17,
                        "itemId": item_id,
                        "testUnicode": "",
                        "testerId": tester_id,
                        "keyNum": "1",
                        "evaType": 7,
                        "uuid": uuid,
                        "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                        "startDate": "2022-10-14 13:25:30",
                        "endDate": "2022-10-14 13:26:30",
                        "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                    }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post',headers=header)
                print(res_reg.json())
            # 100米跑
            if (item_id == "92"):
                insert_parm1 = {
                        "testType": "1",
                        "score": scores_92,
                        "itemId": item_id,
                        "testUnicode": "",
                        "testerId": tester_id,
                        "keyNum": "1",
                        "evaType": 7,
                        "uuid": uuid,
                        "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                        "startDate": "2022-10-14 13:25:30",
                        "endDate": "2022-10-14 13:26:30",
                        "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                    }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())

            # 200米自由泳
            if (item_id == "108"):
                insert_parm1 = {
                        "testType": "1",
                        "score": scores_108,
                        "itemId": item_id,
                        "testUnicode": "",
                        "testerId": tester_id,
                        "keyNum": "1",
                        "evaType": 7,
                        "uuid": uuid,
                        "faceUnicode": "2832cf335afc4e5f80f33af654c02c81",
                        "startDate": "2022-10-14 13:25:30",
                        "endDate": "2022-10-14 13:26:30",
                        "deviceUnicode": "7b9654d9-1efc-3d25-9425-b544ea2d66cb"
                    }
                res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
                print(res_reg.json())
    # for i in  range(1,2):
    #     res_reg = HttpRequest(insert_url, param=json.dumps(insert_parm1)).http_request('post', headers=header)
    #     print(res_reg.json())

